@{
    var moduleId = ViewBag.ModuleId as Guid?;
}

<form id="createSprintForm">
    <input type="hidden" id="moduleId" name="moduleId" value="@moduleId" />
    
    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <input type="text" class="form-control" id="name" name="name" required>
    </div>
    
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" rows="3"></textarea>
    </div>
    
    <div class="mb-3">
        <label for="startDate" class="form-label">Start Date</label>
        <input type="date" class="form-control" id="startDate" name="startDate" required>
    </div>
    
    <div class="mb-3">
        <label for="targetDate" class="form-label">Target Date</label>
        <input type="date" class="form-control" id="targetDate" name="targetDate" required>
    </div>
    
    <div class="mb-3">
        <label for="sortOrder" class="form-label">Sort Order</label>
        <input type="number" class="form-control" id="sortOrder" name="sortOrder" value="1" min="1">
    </div>
    
    <div class="mb-3">
        <label for="note" class="form-label">Note</label>
        <textarea class="form-control" id="note" name="note" rows="3"></textarea>
    </div>
    
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary" id="createSprintSubmitBtn">Create</button>
    </div>
</form>

<script>
    document.getElementById('createSprintForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            moduleId: document.getElementById('moduleId').value,
            name: document.getElementById('name').value,
            description: document.getElementById('description').value,
            startDate: document.getElementById('startDate').value,
            targetDate: document.getElementById('targetDate').value,
            sortOrder: parseInt(document.getElementById('sortOrder').value),
            note: document.getElementById('note').value
        };
        
        fetch(`/api/modules/${formData.moduleId}/sprint-plannings`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Failed to create sprint planning');
            }
        })
        .then(result => {
            var createModal = bootstrap.Modal.getInstance(document.getElementById('createSprintModal'));
            createModal.hide();
            loadSprintPlannings(); // Reload sprint plannings list
            alert('Sprint planning created successfully');
        })
        .catch(error => {
            alert('Error creating sprint planning: ' + error.message);
        });
    });
</script>